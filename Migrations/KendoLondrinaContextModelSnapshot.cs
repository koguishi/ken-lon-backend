// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kendo_londrina.Infra;

#nullable disable

namespace kendo_londrina.Migrations
{
    [DbContext(typeof(KendoLondrinaContext))]
    partial class KendoLondrinaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kendo_londrina.Domain.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CidadeNascimento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("Cpf")
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("EditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EscolaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Religiao")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Rg")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("TelCelular")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("UfNascimento")
                        .HasMaxLength(2)
                        .HasColumnType("char");

                    b.HasKey("Id");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("kendo_londrina.Domain.Entities.Mensalidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlunoNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("EditedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EscolaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Excluida")
                        .HasColumnType("bit");

                    b.Property<string>("MeioPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Observacao")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Mensalidades", (string)null);
                });

            modelBuilder.Entity("kendo_londrina.Domain.Entities.Mensalidade", b =>
                {
                    b.HasOne("kendo_londrina.Domain.Entities.Aluno", "Aluno")
                        .WithMany("Mensalidades")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("kendo_londrina.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Mensalidades");
                });
#pragma warning restore 612, 618
        }
    }
}
